---
name: Tagged Releases

on:
  push:
    tags:
      - "v*"  # Only tags starting with "v" for "v1.0.0", etc.
  pull_request:
    types:
      - closed

jobs:
  get_version_tag:
    runs-on: ubuntu-24.04
    if: github.event_name == 'tag'
    outputs:
      version: ${{ steps.get_version_tag.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938  # v4.2.0

      - name: Extract tag name
        if: github.event_name == 'tag'
        id: get_version_tag
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> "$GITHUB_OUTPUT"

  get_version_pr:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    if: >-
      github.event_name == 'pull_request' &&
      github.repository == github.event.pull_request.head.repo.full_name &&
      startsWith(github.head_ref, 'release/') &&
      github.event.pull_request.merged == true &&
      github.base_ref == format('refs/heads/{0}', github.event.repository.default_branch)

    outputs:
      version: ${{ steps.get_version_pr.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938  # v4.2.0

      - name: Set up Python 3.10
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3  # v5.2.0
        with:
          python-version: '3.10'

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          python -m pip install packaging

      - name: Extract version of merged release PR
        id: get_version_pr
        run: echo "version=$(python3 tools/version.py)" >> "$GITHUB_OUTPUT"

      - name: Create tag for release
        uses: mathieudutour/github-tag-action@d28fa2ccfbd16e871a4bdf35e11b3ad1bd56c0c1  # v6.2
        with:
          github_token: ${{ github.token }}
          custom_tag: ${{ steps.get_version_pr.outputs.version }}

  call_central_workflow:
    if: >-
      always() &&
      (
        needs.get_version_tag.result == 'success' ||
        needs.get_version_pr.result == 'success'
      )
    needs:
      - get_version_tag
      - get_version_pr
    uses: ./.github/workflows/ci.yml
    with:
      deploy-docs: false
      release: true
      version: ${{ github.event_name == 'tag' && needs.get_version_tag.outputs.version || needs.get_version_pr.outputs.version }}
    permissions:
      contents: write
      id-token: write
      pages: write
      pull-requests: read
    secrets: inherit
